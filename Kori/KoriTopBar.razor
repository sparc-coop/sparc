<div id="kori-top-bar" class="kori-top-bar kori-ignore">
    <div class="top-bar-buttons">
        @foreach (var button in Buttons)
        {
            <button class="top-bar-button @(SelectedButton == button ? "selected" : "")" @onclick="() => OnButtonClick(button)">
                <img src="@button.IconPath" alt="@button.Text icon" class="icon normal-icon @(SelectedButton == button ? "hidden" : "")" />
                <img src="@button.IconHoverPath" alt="@button.Text icon hover" class="icon hover-icon @(SelectedButton == button ? "" : "hidden")" />
                <span class="btn-text">@button.Text</span>
            </button>
        }
    </div>
    <div class="bottom-bar">
        <div class="logo">
            <img src="/_content/Kori/images/Kori_Logo.svg" alt="Logo" />
        </div>
        <div class="content">
            @if (SelectedButton != null)
            {
                @if (Kori.Mode == "Search")
                {
                    <Kori.Modes.SearchMode />
                }
                else if (Kori.Mode == "Translate")
                {
                    <Kori.Modes.TranslateMode />
                }
                else if (Kori.Mode == "Blog")
                {
                    <Kori.Modes.BlogMode />
                }
                else if (Kori.Mode == "ABTesting")
                {
                    <Kori.Modes.ABTestingMode />
                }
                else if (Kori.Mode == "Edit")
                {
                    <Kori.Modes.EditTextMode />
                }
                else if (Kori.Mode == "EditImage")
                {
                    <Kori.Modes.EditImageMode />
                }
            }
            else
            {
                <div>
                    <Kori.Modes.DefaultMode />
                </div>
            }
        </div>
    </div>
</div>

@inject Kori Kori

@code {
    public class TopBarButton
    {
        public string Text { get; set; }
        public string IconPath { get; set; }
        public string IconHoverPath { get; set; }
        public string Mode { get; set; }
    }

    private List<TopBarButton> Buttons = new List<TopBarButton>
    {
        new TopBarButton { Text = "Search", IconPath = "/_content/Kori/icons/Search2.svg", IconHoverPath = "/_content/Kori/icons/Search2-blue.svg", Mode = "Search" },
        new TopBarButton { Text = "Translate", IconPath = "/_content/Kori/icons/Lang.svg", IconHoverPath = "/_content/Kori/icons/Lang-blue.svg", Mode = "Translate" },
        new TopBarButton { Text = "Blog", IconPath = "/_content/Kori/icons/Blog.svg", IconHoverPath = "/_content/Kori/icons/Blog-blue.svg", Mode = "Blog" },
        new TopBarButton { Text = "A/B Testing", IconPath = "/_content/Kori/icons/AB.svg", IconHoverPath = "/_content/Kori/icons/AB-blue.svg", Mode = "ABTesting" }
    };

    private TopBarButton SelectedButton;

    private async Task OnButtonClick(TopBarButton button)
    {
        SelectedButton = button;

        switch (button.Mode)
        {
            case "Search":
                await Kori.OpenSearchMenuAsync();
                break;
            case "Translate":
                Kori.OpenTranslationMenu();
                break;
            case "Blog":
                Kori.OpenBlogMenu();
                break;
            case "ABTesting":
                Kori.OpenABTestingMenu();
                break;
            case "Edit":
                await Kori.EditAsync();
                break;
            case "EditImage":
                await Kori.EditAsync();
                break;
            default:
                break;
        }

        StateHasChanged();
    }
}

