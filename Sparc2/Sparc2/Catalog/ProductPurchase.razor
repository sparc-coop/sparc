@using Sparc.Blossom.Authentication
@using Sparc.Engine
@using Sparc.Engine.Aura
@using Sparc.Engine.Billing
@using System.Globalization

<div class="product-purchase">
    <section class="license-section">
        <PurchaseLicenseType @bind-SelectedLicense="SelectedLicense" @bind-GiftEmail="GiftEmail" />
    </section>
    @if (CurrentUser != null && !CurrentUser.HasIdentity("Email"))
    {
        <section class="billing-section">
            <PurchaseBilling UserEmail="@Email" OnEmailVerified="HandleEmailVerified"></PurchaseBilling>
        </section>
    }
    <section class="payment-section">
        <h5>Payment Information</h5>
        <div class="form-container">
            <CurrencySelector />
            <ProductPurchaseStripeForm Product="Product"></ProductPurchaseStripeForm>
        </div>
    </section>
</div>

@inject ISparcAura Aura
@code {
    [Parameter] public required Product Product { get; set; }
    BlossomUser? CurrentUser;

    string SelectedLicense = "personal";
    string GiftEmail = "";
    private bool isEmailVerified = false;
    private string? Email => CurrentUser?.Identity("Email");

    private bool CanPurchase => isEmailVerified;

    protected override async Task OnInitializedAsync()
    {
        CurrentUser = await Aura.UserInfo();
    }

    private void HandleEmailVerified(bool verified)
    {
        isEmailVerified = verified;
        StateHasChanged();
    }
}