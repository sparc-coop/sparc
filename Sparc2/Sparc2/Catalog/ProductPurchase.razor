@using Sparc.Blossom.Authentication
@using Sparc.Blossom.Billing
@using System.Globalization

<div class="product-purchase">
    <form id="payment-form" @onsubmit="SubmitUserBilling" @onsubmit:preventDefault="true">
        <section class="license-section">
            <PurchaseLicenseType @bind-SelectedLicense="SelectedLicense" @bind-GiftEmail="GiftEmail" />
        </section>
        <section class="billing-section">
            <PurchaseBilling Order="Order"></PurchaseBilling>
        </section>
        <section class="payment-section">
            <h5>Payment Information</h5>
            <div class="form-container">
                <ProductPurchasePayment Order="Order" StripeProduct="StripeProduct"></ProductPurchasePayment>
                <div class="form-group">
                    <label>
                        <span>Discount Code</span>
                        <input @bind="Order.FirstName" placeholder="Discount code" />
                    </label>
                </div>                
            </div>
        </section>
        <section class="summary-section">
            <PurchaseSummary></PurchaseSummary>
        </section>
        <button id="submit-button" type="submit" class="btn primary-btn">
            Purchase
        </button>
    </form>
</div>
@inject IJSRuntime JS
@code {
    [Parameter] public Product? ActiveProduct { get; set; }

    private GetProductResponse? StripeProduct;
    BlossomUser? CurrentUser;
    CreateOrderRequest Order = new CreateOrderRequest();

    string SelectedLicense = "personal";
    string GiftEmail = "";

    protected override async Task OnInitializedAsync()
    {
        CurrentUser = await SparcEngine.UserInfo();
        StripeProduct = await SparcEngine.GetProductAsync("prod_SW5yY8O8KprzFu");
    }

    public async void SubmitUserBilling()
    {
        var result = await JS.InvokeAsync<PaymentResult>(
            "stripeIntegration.confirmPayment"
        );
    }
    public class PaymentResult
    {
        public bool Succeeded { get; set; }
        public string? Message { get; set; }
        public string? Status { get; set; }
    }
}