@using Sparc.Blossom.Authentication
@using Sparc.Blossom.Billing
@using System.Globalization
<div class="product-purchase">
    <form @onsubmit="SubmitUserBilling" @onsubmit:preventDefault="true">
        <section class="license-section">
            <PurchaseLicenseType SelectedLicense="SelectedLicense"
                                 SelectedLicenseChanged="(value) => SelectedLicense = value"
                                 GiftEmail="GiftEmail"
                                 GiftEmailChanged="(value) => GiftEmail = value"
                                 GiftEmailConfirmation="GiftEmailConfirmation"
                                 GiftEmailConfirmationChanged="(value) => GiftEmailConfirmation = value"
                                 IsGiftConfirmed="IsGiftConfirmed"
                                 IsGiftConfirmedChanged="(value) => IsGiftConfirmed = value"></PurchaseLicenseType>
        </section>
        <section class="billing-section">
            <PurchaseBilling Order="Order"></PurchaseBilling>
        </section>
        <section class="payment-section">
            <h5>Payment Information</h5>
            <div class="form-container">
                <ProductPurchasePrices Order="Order" StripeProduct="StripeProduct"></ProductPurchasePrices>
                <div class="form-group discount">
                    <label>
                        <span>Discount Code</span>
                        <input @bind="Order.FirstName" placeholder="Discount code" />
                    </label>
                    <button>Apply</button>
                </div>
                <ProductPurchaseStripeForm Order="Order"></ProductPurchaseStripeForm>
            </div>
        </section>
        <section class="summary-section">
            <PurchaseSummary></PurchaseSummary>
        </section>
        <button type="submit" class="btn primary-btn">
            Purchase
        </button>
    </form>
</div>

@code {
    [Parameter] public Product? ActiveProduct { get; set; }

    private GetProductResponse? StripeProduct;
    BlossomUser? CurrentUser;
    CreateOrderRequest Order = new CreateOrderRequest();

    string SelectedLicense = "personal";
    string GiftEmail = "";
    string GiftEmailConfirmation = "";
    bool IsGiftConfirmed = false;

    protected override async Task OnInitializedAsync()
    {
        CurrentUser = await SparcEngine.UserInfo();

        StripeProduct = await SparcEngine.GetProductAsync("prod_SW5yY8O8KprzFu");


        var test = ActiveProduct;

        var bpoint = "";
    }

    public Task<string> SubmitUserBilling()
    {
        if (CurrentUser == null)
        {
            throw new InvalidOperationException("User is not authenticated.");
        }

        return Task.FromResult("Billing information submitted successfully.");
    }

    void ConfirmGiftEmail()
    {
        if (GiftEmail != GiftEmailConfirmation)
        {
            Console.WriteLine("Gift recipient emails do not match.");
            return;
        }
        else
        {
            IsGiftConfirmed = true;
            Console.WriteLine($"Gift email confirmed: {GiftEmail}");
        }
    }

    void EditGiftEmail()
    {
        IsGiftConfirmed = false;
    }
}