@using System.Globalization
@using Sparc.Engine

<div class="form-group">
    <label>
        <span>Currency *</span>
        <select value="@Order.Currency" @onchange="OnCurrencyChanged">
            @foreach (var cur in Currencies)
            {
                <option value="@cur.Id" selected="@(Order.Currency == cur.Id ? "selected" : null)">@cur.Name (@cur.Symbol)</option>
            }
        </select>
    </label>
</div>

<ProductPurchaseStripeForm @ref="StripeFormRef" Order="Order"></ProductPurchaseStripeForm>

@inject BlossomApi Api
@code {
    [Parameter] public required Sparc.Blossom.Api.Product Product { get; set; }
    [Parameter] public SparcOrder Order { get; set; } = default!;

    ProductPurchaseStripeForm? StripeFormRef;
    List<SparcCurrency> Currencies = [];
    SparcCurrency? SelectedCurrency;

    protected override async Task OnParametersSetAsync()
    {
        if (!Currencies.Any())
            Currencies = await Billing.GetCurrenciesAsync();

        await UpdateCurrency(Order.Currency);
    }

    private async Task OnCurrencyChanged(ChangeEventArgs e)
    {
        await UpdateCurrency(e.Value?.ToString());
    }

    private async Task UpdateCurrency(string? currency)
    {
        if (currency is not null)
            SelectedCurrency = Currencies.FirstOrDefault(c => c.Id == currency);

        if (SelectedCurrency is not null)
            Order.Currency = SelectedCurrency.Id;

        if (StripeFormRef is not null)
            await StripeFormRef.InitiateStripePayment();
    }
}
