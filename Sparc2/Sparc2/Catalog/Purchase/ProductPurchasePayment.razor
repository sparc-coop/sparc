@using System.Globalization
@using Sparc.Engine

<div class="form-group">
    <label>
        <span>Currency *</span>
        <select value="@Order.Currency" @onchange="OnCurrencyChanged">
            @foreach (var cur in Currencies)
            {
                <option value="@cur.Id" selected="@(Order.Currency == cur.Id ? "selected" : null)">@cur.NativeName (@cur.Symbol)</option>
            }
        </select>
    </label>
</div>
<div class="form-group amount">
    <label>
        <span>Amount</span>
    </label>

    @if (SelectedCurrency != null && Price != null)
    {
        <div class="description">
            <h3>
                @SelectedCurrency.ToString(Price.Price, CultureInfo.CurrentUICulture)
            </h3>
        </div>
    }
</div>

<ProductPurchaseStripeForm @ref="StripeFormRef" Order="Order"></ProductPurchaseStripeForm>

@inject BlossomApi Api
@code {
    [Parameter] public required Sparc.Blossom.Api.Product Product { get; set; }
    [Parameter] public SparcOrder Order { get; set; } = default!;

    GetProductResponse? Price;
    ProductPurchaseStripeForm? StripeFormRef;
    List<Sparc2.Products.SparcCurrency> Currencies = Sparc2.Products.SparcCurrency.All();
    Sparc2.Products.SparcCurrency? SelectedCurrency;


    protected override async Task OnParametersSetAsync()
    {
        SelectedCurrency = Currencies.FirstOrDefault(c => c.Id == Order.Currency)
            ?? Currencies.FirstOrDefault(c => c.Id == "USD");

        await UpdatePrice();
    }

    private async Task OnCurrencyChanged(ChangeEventArgs e)
    {
        SelectedCurrency = Currencies.FirstOrDefault(c => c.Id == e.Value?.ToString());
        await UpdatePrice();
    }

    private async Task UpdatePrice()
    {
        if (Product.StripeProductId != null)
            Price = await Billing.GetProductAsync(Product.StripeProductId, SelectedCurrency!.Id);

        Order.Currency = SelectedCurrency.Id;
        Order.Amount = Price?.Price ?? 0;


        if (Order.Amount > 0 && StripeFormRef is not null)
        {
            await StripeFormRef.InitiateStripePayment();
        }

    }
}
