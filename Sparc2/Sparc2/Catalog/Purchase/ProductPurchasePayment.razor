@using System.Globalization
@using Sparc.Engine

<div class="form-group">
    <label>
        <span>Currency *</span>
        <select value="@Order.Currency" @onchange="OnCurrencyChanged">
            @foreach (var cur in Currencies)
            {
                <option value="@cur.Id" selected="@(Order.Currency == cur.Id ? "selected" : null)">@cur.NativeName (@cur.Symbol)</option>
            }
        </select>
    </label>
</div>
<div class="form-group amount">
    <label>
        <span>Amount</span>
    </label>
    <div class="amount-grid">
        @StripeProduct?.Price.FormattedAmount
    </div>
</div>

<ProductPurchaseStripeForm @ref="StripeFormRef" Order="Order"></ProductPurchaseStripeForm>

@inject BlossomApi Api
@code {
    [Parameter] public required Sparc.Blossom.Api.Product Product { get; set; }
    [Parameter] public SparcOrder Order { get; set; } = default!;

    ProductPurchaseStripeForm? StripeFormRef;
    Sparc.Blossom.Api.ProductInfo? StripeProduct;
    List<Sparc2.Products.SparcCurrency> Currencies = Sparc2.Products.SparcCurrency.All();


    protected override async Task OnParametersSetAsync()
    {
        await UpdatePrice();
    }

    private async Task OnCurrencyChanged(ChangeEventArgs e)
    {
        Order.Currency = e.Value?.ToString() ?? Order.Currency;
        await UpdatePrice();
    }

    private async Task UpdatePrice()
    {
        StripeProduct = await Api.Products.GetProductById(Product.Id, Order.Currency);
        if (Order.Amount > 0 && StripeFormRef is not null)
        {
            await StripeFormRef.InitiateStripePayment();
        }

    }
}
