<div class="product-info @PageClass(PageType) @(showFullDescription ? "fullscreen" : "")">
    <div class="info-container">
        <header>
            <div>
                <h2 @onclick='() => Nav.NavigateTo($"/catalog/{ActiveProduct.Id}")'>@ActiveProduct.Title</h2>
                <div class="price">
                    <span>$@ActiveProduct.Price.ToString()</span>
                </div>
            </div>
            <div class="subheader product-tags">
                @foreach (var tag in ActiveProduct.Tags)
                {
                    var color = TagColor(tag.Type);
                    <div class="tag product-tag @color">@tag.Name</div>
                }
            </div>
        </header>
        <section class="description">
            <p>@ActiveProduct.Description</p>
        </section>
        <section class="credits">
            <h3><button @onclick=ToggleCredits>Credits <span class="@creditsClass">+</span></button></h3>
            <div class="@creditsClass">
                <p>Vitae pellentesque | Position Title</p>
                <p>Sem placerat | Position Title</p>
                <p>Accumsan maecenas | Position Title</p>
                <p>Vestibulum fusce | Position Title</p>
                <p>Dictum risus | Position Title</p>
                <p>Suspendisse aliquet | Position Title</p>
            </div>
        </section>
        @if (PageType == "Product")
        {
            <footer>
                <ProductActions ActiveProduct=ActiveProduct OnClickHelp=ClickHelp OnClickPurchase=ClickPurchase OnClickDownload=ClickDownload OnClickSurvey=ClickSurvey OnClickTryDemo=ClickTryDemo />
            </footer>
        }
    </div>

    @* <div class="gradient-overlay mobile-only"></div> *@
    <button class="view-btn mobile-only" @onclick='() => Nav.NavigateTo($"/catalog/{ActiveProduct.Id}")'><ArrowLeftIcon /></button>
    <div class="show-more mobile-only">
        <button class="more-btn" @onclick='() => ToggleFullDescription(true)'>Show More</button>
    </div>
    <div class="show-less mobile-only">
        <button class="less-btn" @onclick='() => ToggleFullDescription(false)'>Show Less</button>
    </div>
</div>

@code {
    [Parameter] public required Product ActiveProduct { get; set; }
    [Parameter] public string? PageType { get; set; }
    [Parameter] public EventCallback<bool> OnClickShowMore { get; set; }
    [Parameter] public EventCallback OnClickHelp { get; set; }
    [Parameter] public EventCallback OnClickPurchase { get; set; }
    [Parameter] public EventCallback OnClickDownload { get; set; }
    [Parameter] public EventCallback OnClickSurvey { get; set; }
    [Parameter] public EventCallback OnClickTryDemo { get; set; }

    bool showCredits; 
    string creditsClass = "";
    bool showFullDescription;

    string PageClass(string? page)
    {
        var pageClass = page switch
        {
            "Catalog" => "catalog-page",
            "Product" => "product-page",
            _ => ""
        };

        return pageClass;
    }

    string TagColor(string tag)
    {
        var color = tag switch
        {
            "development" => "purple",
            "testing" => "orange",
            "gift" => "gradient",
            "archived" => "grey",
            "owned" => "blue",
            _ => "default"
        };

        return color;
    }

    void ToggleCredits()
    {
        showCredits = !showCredits;

        if (showCredits == true)
        {
            creditsClass = "rotate";
        } else
        {
            creditsClass = "rotateBack";
        }
    }

    void ToggleFullDescription(bool showMore)
    {
        if (showMore)
        {
            showFullDescription = true;
            OnClickShowMore.InvokeAsync(true);
        } else
        {
            showFullDescription = false;
            OnClickShowMore.InvokeAsync(false);
        }
    }

    void ClickHelp()
    {
        OnClickHelp.InvokeAsync();
    }

    void ClickPurchase()
    {
        OnClickPurchase.InvokeAsync();
    }

    void ClickDownload()
    {
        OnClickDownload.InvokeAsync();
    }

    void ClickSurvey()
    {
        OnClickSurvey.InvokeAsync();
    }

    void ClickTryDemo()
    {
        OnClickTryDemo.InvokeAsync();
    }
}