@page "/catalog/{ProductId}"
@layout CatalogLayout

<article class="product-page @(showPurchaseTab ? "left-only" : "")">
    <div class="page-container">
        <div class="left">
            <div class="left-container">
                @if (ActiveProduct != null && showPurchaseTab == false)
                {
                    <div class="spacer mobile-only"></div>
                    @if (!ActiveProduct.Images.Any())
                    {
                        <figure id="img-1" class="product-img span-1"></figure>
                        <figure id="img-2" class="product-img span-1"></figure>
                        <div class="img-container span-2">
                            <figure id="img-3" class="product-img"></figure>
                            <figure id="img-4" class="product-img"></figure>
                        </div>
                        <figure id="img-5" class="product-img img-5 span-1"></figure>

                    } 
                    else
                    {
                        var i = 1;
                        foreach (var file in ActiveProduct.Images)
                        {
                            <figure id="img-@i"class="product-img span-1">
                                <img src="@file" alt="@ActiveProduct.Title Product Image @i++" />
                            </figure>
                        }
                    }
                } 
                else
                {
                    <Sparc2.Catalog.ProductPurchase Product="ActiveProduct" />
                }
            </div>
        </div>
        <div class="right @((showFullDescription && !showPurchaseTab) ? "fullscreen" : "")">
            <div class="right-container">
                <div class="right-header">
                    <button @onclick=@ProductPageNav><ArrowLeftIcon /></button>
                </div>
                @if (ActiveProduct != null)
                {
                    <Sparc2.Catalog.ProductInfo PageType="Product" ActiveProduct="ActiveProduct" OnClickShowMore=ToggleFullDescription OnClickHelp =ToggleHelp OnClickPurchase=TogglePurchaseTab OnClickDownload=ToggleDownload OnClickSurvey=ToggleSurvey OnClickTryDemo=ToggleDemo />
                } else
                {
                    <div class="product-info">
                        <header>
                            <h3>Select a product</h3>
                            <p>Hover over each product image to view more details</p>
                        </header>
                    </div>
                }
            </div>
        </div>
    </div>
</article>

@inject BlossomApi Api 
@code {
    [Parameter] public required string ProductId { get; set; }

    Sparc.Blossom.Api.Product? ActiveProduct;
    bool showFullDescription;
    bool showPurchaseTab;

    protected override async Task OnInitializedAsync()
    {
        ActiveProduct = await Api.Products.Get(ProductId);
    }

    void ProductPageNav()
    {
        if (showPurchaseTab)
        {
            showPurchaseTab = false;
        }
        else
        {
            Console.WriteLine("go back");
            var url = "/catalog";
            //var obj = new { ProductId = ActiveProduct?.Id };
            Nav.NavigateTo(url);
            //Js.InvokeVoidAsync("goBack");
            //Js.InvokeVoidAsync("replaceURL", url);
            //var url = "/catalog" + (ActiveProduct != null ? $"/#{ActiveProduct.Id}" : "");
            // Js.InvokeVoidAsync("replaceURL", obj, url);
            // Nav.NavigateTo(url, new NavigationOptions()
            // {
            //     HistoryEntryState = ActiveProduct?.Id
            // });
        }
    }

    void ToggleFullDescription(bool showMore)
    {
        if (showMore)
        {
            showFullDescription = true;
            Js.InvokeVoidAsync("disableBodyScrolling");
        } else
        {
            showFullDescription = false;
        }
    }

    void ToggleHelp()
    {
        Console.WriteLine("Help toggled for product: " + (ActiveProduct?.Title ?? "Unknown Product"));
        showPurchaseTab = false;
    }

    void TogglePurchaseTab()
    {
        Console.WriteLine("Toggling purchase tab for product: " + (ActiveProduct?.Title ?? "Unknown Product"));
        showPurchaseTab = !showPurchaseTab;
    }

    void ToggleDownload()
    {
        Console.WriteLine("Toggling download for product: " + (ActiveProduct?.Title ?? "Unknown Product"));
        showPurchaseTab = false;
    }

    void ToggleSurvey()
    {
        Console.WriteLine("Toggling survey for product: " + (ActiveProduct?.Title ?? "Unknown Product"));
        showPurchaseTab = false;
    }

    void ToggleDemo()
    {
        Console.WriteLine("Toggling demo for product: " + (ActiveProduct?.Title ?? "Unknown Product"));
        showPurchaseTab = false;
    }
}