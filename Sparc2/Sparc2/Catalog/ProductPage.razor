@page "/catalog/{ProductId}"
@layout CatalogLayout

<article class="product-page @(ActiveTab != null ? "left-only" : "")">
    <div class="page-container">
        <div class="left">
            @if (ActiveProduct != null)
            {
                switch (ActiveTab)
                {
                    case "Purchase":
                        <Sparc2.Catalog.ProductPurchase Product="ActiveProduct" />
                        ;
                        break;
                    case "Download":
                        <Sparc2.Catalog.ProductKey />
                        break;
                    case "Demo":
                    case "Help":
                    case null:
                        <Sparc2.Catalog.ProductImages Product="ActiveProduct" />
                        break;
                }
            }
        </div>
        <div class="right @((showFullDescription && ActiveTab == null) ? "fullscreen" : "")">
            <div class="right-container">
                <div class="right-header">
                    <button @onclick=@GoBack><ArrowLeftIcon /></button>
                </div>
                @if (ActiveProduct != null)
                {
                    <Sparc2.Catalog.ProductInfo PageType="Product" ActiveProduct="ActiveProduct" OnTabChanged="ChangeTab" />
                } 
                else
                {
                    <div class="product-info">
                        <header>
                            <h3>Select a product</h3>
                            <p>Hover over each product image to view more details</p>
                        </header>
                    </div>
                }
            </div>
        </div>
    </div>
</article>

@inject BlossomApi Api 
@code {
    [Parameter] public required string ProductId { get; set; }
    [SupplyParameterFromQuery(Name = "payment_intent_client_secret")] public string? PaymentIntentClientSecret { get; set; }

    Sparc.Blossom.Api.Product? ActiveProduct;
    bool showFullDescription;
    string? ActiveTab;

    protected override async Task OnInitializedAsync()
    {
        ActiveProduct = await Api.Products.Get(ProductId);
        // if (PaymentIntentClientSecret != null)
        //     ToggleDownload();

    }

    void ChangeTab(string? tab)
    {
        ActiveTab = tab;
        showFullDescription = false;
    }

    void GoBack()
    {
        if (ActiveTab != null)
        {
            ActiveTab = null;
        }
        else
        {
            var url = "/catalog";
            Nav.NavigateTo(url);
        }
    }

    void ToggleFullDescription(bool showMore)
    {
        if (showMore)
        {
            showFullDescription = true;
            Js.InvokeVoidAsync("disableBodyScrolling");
        } else
        {
            showFullDescription = false;
        }
    }
}