<div class="add-card">
    <header>
        <button class="@GetButtonClass(0)" @onclick="() => SelectHeaderButton(0)">
            <LightbulbIcon /> <span>Share</span>
        </button>

        <button class="@GetButtonClass(1)" @onclick="() => SelectHeaderButton(1)">
            <DollarIcon /> <span>Donate</span>
        </button>
    </header>

    <div class="progress-bar">
        <div class="progress" style="width: @(StepProgress + "%");"></div>
    </div>

    <section style="overflow: scroll">
        @if (SelectedHeaderButton == 0)
        {
            <AddIdea CurrentStep="@CurrentStep" OnNext="OnNextOrSubmit" OnBack="OnBackOrCancel" />
        }
        else
        {
            <AddDonation CurrentStep="@CurrentStep" OnNext="OnNextOrSubmit" OnBack="OnBackOrCancel" />
        }
    </section>

    <footer>
        @* Always show Back/Cancel button *@
        <button @onclick="OnBackOrCancel"><span>@BackOrCancelLabel</span></button>

        @* --- Conditionally hide Next/Submit/Donate button --- *@
        @* Hide if Donate(1) is selected AND we are on the Payment Step(1) *@
        @if (!(SelectedHeaderButton == 1 && CurrentStep == 1))
        {
            <button @onclick="OnNextOrSubmit"><span>@NextOrSubmitLabel</span></button>
        }
    </footer>
</div>


@code {
    private int CurrentStep;
    private int SelectedHeaderButton; // 0 = Share, 1 = Donate
    private int StepProgress => CurrentStep == 0 ? 50 : 100;

    [Parameter] public EventCallback<bool> OnClose { get; set; }

    private string GetButtonClass(int index) => index == SelectedHeaderButton ? "active" : "";

    private string BackOrCancelLabel => CurrentStep == 0 ? "Cancel" : "Back";
    private string NextOrSubmitLabel => CurrentStep == 0 ? "Next" : (SelectedHeaderButton == 0 ? "Upload" : "Donate");

    private void SelectHeaderButton(int index)
    {
        SelectedHeaderButton = index;
        CurrentStep = 0;
    }

    private async Task OnNextOrSubmit()
    {
        if (CurrentStep == 0)
            CurrentStep = 1;
        else
        {
            if (SelectedHeaderButton == 0)
                await SubmitIdea();
            else
                await SubmitDonation();
        }
    }

    private async Task OnBackOrCancel()
    {
        if (CurrentStep == 0)
        {
            await OnClose.InvokeAsync(true);
        }
        else
        {
            CurrentStep = 0;
        }
    }

    private Task SubmitIdea()
    {
        return Task.CompletedTask;
    }

    private Task SubmitDonation()
    {
        return Task.CompletedTask;
    }    
}