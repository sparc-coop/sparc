@using System.Net.Http.Json
@using System.Globalization
@using Sparc.Blossom.Authentication
@using Sparc.Blossom.Content
@using Sparc.Blossom.Content.Icons
@using Microsoft.AspNetCore.Components.Forms

<div class="language-select">
    @if (Languages is not null && SelectedLanguageId is not null)
    {
        <InputSelect @bind-Value="SelectedLanguageId">
            @foreach (var language in Languages)
            {
                <option value="@language.Id">@language.DisplayName (@language.NativeName)</option>
            }
        </InputSelect>
    }
</div>

@code {
    [Parameter] public BlossomUser? CurrentUser { get; set; }
    // [Parameter] public string? SelectedLanguageId { get; set; }
    [Parameter] public EventCallback<string?> SelectedLanguageIdChanged { get; set; }
    private string? internalSelectedLanguageId;

    [Parameter]
    public string? SelectedLanguageId
    {
        get => internalSelectedLanguageId;
        set
        {
            if (internalSelectedLanguageId != value)
            {
                internalSelectedLanguageId = value;
                SelectedLanguageIdChanged.InvokeAsync(value);
            }
        }
    }

    private IEnumerable<Sparc.Engine.Language>? Languages { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Languages = await SparcEngine.GetLanguages();

        if (string.IsNullOrWhiteSpace(SelectedLanguageId))
        {
            var inferred = CurrentUser?.PrimaryLanguage?.Id
                ?? Languages.FirstOrDefault(l => l.Id == CultureInfo.CurrentUICulture.TwoLetterISOLanguageName)?.Id;

            if (!string.IsNullOrWhiteSpace(inferred))
            {
                SelectedLanguageId = inferred;
                await SelectedLanguageIdChanged.InvokeAsync(SelectedLanguageId);
            }
        }
    }
}



@* Fernando's code: *@

@* <div class="language-selector">
    <button @onclick=ToggleLanguageList>
        <Sparc2.Shared.Icons.Language />
        @SelectedLanguage?.DisplayName
        <Sparc2.Shared.Icons.Expand IsExpanded="ShowLanguageSettings" />
    </button>

    @if (ShowLanguageSettings && Languages != null)
    {
        <ul>
            @foreach (var language in Languages)
            {
                <li>
                    <button @onclick=@(() => ChangeLanguage(language))>
                        @language.DisplayName

                        @if (language.DisplayName != language.NativeName)
                        {
                            <aside>@language.NativeName</aside>
                        }

                        @if (SelectedLanguage?.Id == language.Id)
                        {
                            <div class="right">
                                <Sparc2.Shared.Icons.Check />
                            </div>
                        }
                    </button>
                </li>
            }
        </ul>
    }
</div>

@inject IBlossomCloud Cloud

@code {
    [Parameter] public BlossomUser? CurrentUser { get; set; }
    Sparc.Blossom.Content.Language? SelectedLanguage;
    IEnumerable<Sparc.Blossom.Content.Language>? Languages { get; set; }

    bool ShowLanguageSettings = false;

    protected override async Task OnInitializedAsync()
    {
        Languages = await Cloud.GetLanguages();
        // SelectedLanguage = CurrentUser.PrimaryLanguage
        //     ?? Languages.FirstOrDefault(x => x.Id == CultureInfo.CurrentUICulture.TwoLetterISOLanguageName);
    }
    void ToggleLanguageList()
    {
        ShowLanguageSettings = !ShowLanguageSettings;
    }

    async Task ChangeLanguage(Sparc.Blossom.Content.Language language)
    {
        // await LanguageChanged.InvokeAsync(language);

        var updatedUser = await Cloud.AddUserLanguage(language);
        SelectedLanguage = updatedUser.PrimaryLanguage;
        ToggleLanguageList();
        StateHasChanged();
    }
} *@