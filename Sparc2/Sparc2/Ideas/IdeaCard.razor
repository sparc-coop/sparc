<div class="card">
    <header>
        <img src="images/user-stock.png" />
        <div>
            <h3>@Idea.Author</h3>
            <p>@Idea.DateCreated.ToShortDateString()</p>
        </div>
    </header>
    <section>
        <h2>@Idea.Title</h2>
        <div class="files">
            <div class="images">
                @if (Idea.FileUrls.Count < 1)
                {
                    <img src="images/Rectangle 13.png" />
                }
                else
                {
                    @foreach (var fileUrl in Idea.FileUrls)
                    {
                        <img src="@fileUrl" class="@(currentFile == fileUrl ? "active" : "")" />
                    }
                }
            </div>
            @if(Idea.FileUrls.Count > 1)
            {
                <div class="arrows">
                    <button class="arrow-left" @onclick=previousFile><ArrowLeftIcon /></button>
                    <button class="arrow-right" @onclick=nextFile><ArrowLeftIcon /></button>
                </div>
                <div class="indicators">
                    @foreach (var file in Idea.FileUrls)
                    {
                        <div class="indicator @(currentFile == file ? "active" : "")"></div>
                    }
                </div>
            }
        </div>
        <div>
            <p>@Idea.Description</p>
        </div>
    </section>
    <footer>
        <div>
            <button><ChatBubbleIcon /> <span>@comments.Count</span></button>
            <button><ThumbsUpIcon /> <span>@likes.Count</span></button>
        </div>
        <button><FileIcon /> <span>@(Idea.FileUrls?.Count ?? 0)</span></button>
    </footer>
</div>

@code {
    [Parameter, EditorRequired] public ProjectIdea Idea { get; set; }

    List<string> comments = new List<string>();
    List<string> likes = new List<string>();

    string currentFile;

    protected override void OnInitialized()
    {
        currentFile = Idea.FileUrls?.FirstOrDefault() ?? "";
    }

    void nextFile()
    {
        var index = Idea.FileUrls.IndexOf(currentFile);
        if (index < Idea.FileUrls.Count - 1)
        {
            currentFile = Idea.FileUrls[index + 1];
        }
    }

    void previousFile()
    {
        var index = Idea.FileUrls.IndexOf(currentFile);
        if (index > 0)
        {
            currentFile = Idea.FileUrls[index - 1];
        }
    }
}