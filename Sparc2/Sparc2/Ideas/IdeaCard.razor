<div class="card" id='idea-@Idea.Id' @onclick='() => OpenIdeaModal("")' @onclick:stopPropagation=true>
    <header>
        <img src="images/user-stock.png" />
        <div>
            <h3>@Idea.Author</h3>
            <p>@Idea.DateCreated.ToShortDateString()</p>
        </div>
    </header>
    <section>
        <h2>@Idea.Title</h2>
        <div class="files">
            <div class="images">
                @if (Idea.FileUrls.Count < 1)
                {
                    <img src="images/Rectangle 13.png" />
                }
                else
                {
                    <img src="@currentFile" />                    
                }
            </div>            
        </div>
        <div>
            <p>@Idea.Description</p>
        </div>
    </section>
    <footer>
        <div>
            <button class="tertiary-btn" @onclick='() => OpenIdeaModal("comments")'><ChatBubbleIcon /> <span>@comments.Count</span></button>
            <button class="tertiary-btn"><ThumbsUpIcon /> <span>@likes.Count</span></button>
        </div>
        <button class="tertiary-btn" @onclick='() => OpenIdeaModal("files")'><FileIcon /> <span>@(Idea.FileUrls?.Count ?? 0)</span></button>
    </footer>
</div>

@code {
    [Parameter, EditorRequired] public Idea Idea { get; set; }
    [Parameter] public EventCallback<Idea> OnOpenIdeaModal { get; set; }
    [Parameter] public EventCallback<Idea> OnOpenComments { get; set; }
    [Parameter] public EventCallback<Idea> OnOpenFiles { get; set; }

    List<string> comments = new List<string>();
    List<string> likes = new List<string>();

    string currentFile;

    protected override void OnInitialized()
    {
        if (Idea.FileUrls.Count > 0)
        {
            currentFile = Idea.FileUrls?.FirstOrDefault() ?? "";
            StateHasChanged();
        }
    }    

    void OpenIdeaModal(string focus)
    {
        if (focus == "")
        {
            OnOpenIdeaModal.InvokeAsync(Idea);
        }

        if (focus == "comments")
        {
            OnOpenComments.InvokeAsync(Idea);
        }

        if (focus == "files")
        {
            OnOpenFiles.InvokeAsync(Idea);
        }
    }
}