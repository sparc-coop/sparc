@if (CurrentStep == 0)
{
    <div>
        <h2>Be Part of Sparc</h2>
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,</p>
    </div>
    <EditForm Model="@Idea" OnValidSubmit="HandleValidSubmit">
        <label>
            <span>Title <span class="required">*</span></span>
            <InputText placeholder="Name your contribution" @bind-Value="Idea.Title" />
        </label>
        <label>
            <span>Name <span class="required">*</span></span>
            <InputText placeholder="Preferred name" @bind-Value="Idea.Author" />
        </label>
        <label>
            <span>Description</span>
            <InputTextArea placeholder="Text" @bind-Value="Idea.Description" />
        </label>
    </EditForm>
}
else if (CurrentStep == 1)
{
    <EditForm Model="@Idea" OnValidSubmit="HandleValidSubmit">
        <section>
            <h5>Share files</h5>
            <div @ondragover="HandleDragOver" @ondrop="HandleDrop" @onclick="TriggerFileInput">
                <UploadIcon />
                <div>
                    <h3>Drag files here to upload</h3>
                    <p>Or, click to browse</p>
                </div>
                <label>
                    <span>Upload</span>
                    <input type="file" multiple hidden @ref="fileInput" @onchange="HandleFileSelection" />
                </label>
            </div>
        </section>

        <section>
            <h5>Uploaded list (@UploadedFiles.Count)</h5>
            <ul>
                <li>
                    <article>
                        <img src="images/image-03.png" alt="File Icon" />
                        <div>
                            <h4>File name.format</h4>
                            <p>14MB</p>
                        </div>
                        <button>x</button>
                    </article>
                    <div class="progress-bar">
                        <div class="progress" style="width: 20%"></div>
                    </div>
                </li>
                @foreach (var file in UploadedFiles)
                {
                    @* <li>
                        <article>
                            <img src="images/image-03.png" alt="File Icon" />
                            <div>
                                <h4>@file.Name.@file.Format</h4>
                                <p>@(file.Size / (1024 * 1024)) MB</p>
                            </div>
                            <button>x</button>
                        </article>
                        <div class="progress-bar">
                            <div class="progress" style="width: @GetUploadProgress(file)%"></div>
                        </div>
                    </li> *@
                }
            </ul>
        </section>
    </EditForm>
}

@code {
    [Parameter] public int CurrentStep { get; set; }
    [Parameter] public EventCallback OnNext { get; set; }
    [Parameter] public EventCallback OnBack { get; set; }

    private ProjectIdea Idea = new ProjectIdea(string.Empty, string.Empty, string.Empty);

    private async Task HandleValidSubmit()
    {
        if (CurrentStep == 0)
        {
            await OnNext.InvokeAsync();
        }
        else
        {
            await Api.ProjectIdeas.Create(Idea.Title, Idea.Author, Idea.Description);
        }
    }

    private ElementReference fileInput;
    private List<FileInfo> UploadedFiles = new();

    private void TriggerFileInput()
    {
        fileInput.FocusAsync();
    }

    private void HandleDragOver(DragEventArgs e)
    {
        // e.PreventDefault();
    }

    private async Task HandleDrop(DragEventArgs e)
    {
        // e.PreventDefault();
        foreach (var file in e.DataTransfer.Files)
        {
            UploadedFiles.Add(new FileInfo { Name = file/*.Name */ });
        }
    }

    private async Task HandleFileSelection(ChangeEventArgs e)
    {
        foreach (var file in ((IEnumerable<IBrowserFile>)e.Value))
        {
            UploadedFiles.Add(new FileInfo { Name = file.Name });
        }
    }

    private class FileInfo
    {
        public string Name { get; set; } = string.Empty;
    }
}