@if (CurrentStep == 0)
{
    <div>
        <h2>Be Part of Sparc</h2>
        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,</p>
    </div>
    <EditForm Model="@Idea" OnValidSubmit="HandleValidSubmit">
        <label>
            <span>Title <span class="required">*</span></span>
            <InputText placeholder="Name your contribution" @bind-Value="Idea.Title" />
        </label>
        <label>
            <span>Name <span class="required">*</span></span>
            <InputText placeholder="Preferred name" @bind-Value="Idea.Author" />
        </label>
        <label>
            <span>Description</span>
            <InputTextArea placeholder="Text" @bind-Value="Idea.Description" />
        </label>
    </EditForm>
}
else if (CurrentStep == 1)
{
    <EditForm Model="@Idea" OnValidSubmit="HandleValidSubmit">
        <section>
            <h5>Share files</h5>
            <div @ref="fileDropContainer"
                 class="@HoverClass"
                 @ondragenter="HandleDragEnter"
                 @ondragleave="HandleDragLeave">
                <UploadIcon />
                <div>
                    <h3>Drag files here to upload</h3>
                    <p>Or, click to browse</p>
                </div>
                <label>
                    <span>Upload</span>
                    <InputFile OnChange="HandleFileSelection" multiple />
                </label>
            </div>
        </section>

        <section>
            <h5>Uploaded list (@UploadedFiles.Count)</h5>
            <ul>
                <li>
                    <article>
                        <img src="images/image-03.png" alt="File Icon" />
                        <div>
                            <h4>File name.format</h4>
                            <p>14MB</p>
                        </div>
                        <button>x</button>
                    </article>
                    <div class="progress-bar">
                        <div class="progress" style="width: 20%"></div>
                    </div>
                </li>
                @foreach (var file in UploadedFiles)
                {
                    <li>
                        <article>
                            <img src="images/image-03.png" alt="File Icon" />
                            <div>
                                <h4>@file.FileName.@file.FileFormat</h4>
                                <p>@(file.FileSize / (1024 * 1024)) MB</p>
                            </div>
                            <button @onclick="() => UploadedFiles.Remove(file)">x</button>
                        </article>
                        <div class="progress-bar">
                            <div class="progress" style="width: 60%" @* style="width: @GetUploadProgress(file)%" *@></div>
                        </div>
                    </li>
                }
            </ul>
        </section>
    </EditForm>
}

@inject Sparc2.Databases.AzureBlob.AzureBlob AzureBlob

@code {
    [Parameter] public int CurrentStep { get; set; }
    [Parameter] public EventCallback OnNext { get; set; }
    [Parameter] public EventCallback OnBack { get; set; }
    ElementReference fileDropContainer;

    private List<Sparc2.Files.FileUpload> UploadedFiles = new();

    private ProjectIdea Idea = new ProjectIdea(string.Empty, string.Empty, string.Empty, new List<string>());

    private string HoverClass = "";
    void HandleDragEnter(DragEventArgs e) => HoverClass = "dragover";
    void HandleDragLeave(DragEventArgs e) => HoverClass = "";

    private async Task HandleValidSubmit()
    {
        if (CurrentStep == 0)
        {
            await OnNext.InvokeAsync();
        }
        else
        {
            await Api.ProjectIdeas.Create(Idea.Title, Idea.Author, Idea.Description, Idea.FileUrls);
        }
    }

    public async Task HandleFileSelection(InputFileChangeEventArgs e)
    {
        UploadedFiles.Clear();

        foreach (var file in e.GetMultipleFiles())
        {
            var stream = file.OpenReadStream(maxAllowedSize: 10 * 1024 * 1024);
            var url = await AzureBlob.UploadFileAsync(
                containerName: "ideas",
                fileName: file.Name,
                fileStream: stream,
                contentType: file.ContentType
            );
        
            var fileFormat = Path.GetExtension(file.Name)?.TrimStart('.') ?? "unknown";
            var fileSize = (int)file.Size;

            UploadedFiles.Add(new Sparc2.Files.FileUpload(file.Name, url, fileFormat, fileSize));
            Idea.FileUrls.Add(url);
        }
    }

    private void Remove(Sparc2.Files.FileUpload file)
    {
        UploadedFiles.Remove(file);
        Idea.FileUrls.Remove(file.Url);
    }
}