@page "/ideas"
@layout PageLayout

<PageTitle>Ideas | Sparc</PageTitle>

<article class="explore draggable">
    @foreach (var idea in ProjectIdeas)
    {
        <div class="card-container draggable">
            <IdeaCard @key="idea.Id" Idea=@idea OnOpenFullView="OpenFullIdea" />
        </div>
    }
    @if (ShowFullIdeaCard)
    {
        <IdeaCardFull Idea=@CurrentIdea OnClose="CloseFullIdea" />
    }
</article>

@* <div class="modal-overlay"></div> *@

@code {
    bool ShowFullIdeaCard;
    Idea? CurrentIdea;
    IEnumerable<Idea> ProjectIdeas = new List<Idea>();
    string? HighlightedIdeaId;

    protected override async Task OnInitializedAsync()
    {     
        IdeaService.OnIdeaPosted += UpdateIdeas;
        ProjectIdeas = await Api.ProjectIdeas.GetAllIdeas();        
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Js.InvokeVoidAsync("findCenter");

        if (HighlightedIdeaId is not null)
        {
            await Js.InvokeVoidAsync("highlightIdeaCard", HighlightedIdeaId);
            HighlightedIdeaId = null;
        }
    }

    private async Task UpdateIdeas()
    {
        var allIdeas = ProjectIdeas = await Api.ProjectIdeas.GetAllIdeas();

        if (IdeaService.LastPostedIdeaId != null)
        {
            var newId = IdeaService.LastPostedIdeaId;
            var newIdea = allIdeas.FirstOrDefault(i => i.Id == newId);
            var others = allIdeas.Where(i => i.Id != newId).ToList();

            int middleIndex = others.Count / 2;
            others.Insert(middleIndex, newIdea!);

            ProjectIdeas = others;
            HighlightedIdeaId = newId.ToString();
        }
        else
        {
            ProjectIdeas = allIdeas;
        }

        StateHasChanged();
    }       

    void OpenFullIdea(Idea idea)
    {
        ShowFullIdeaCard = true;
        CurrentIdea = idea;
    }

    void CloseFullIdea()
    {
        ShowFullIdeaCard = false;
        CurrentIdea = null;
    }

    public void Dispose()
    {
        IdeaService.OnIdeaPosted -= UpdateIdeas;
    }
}